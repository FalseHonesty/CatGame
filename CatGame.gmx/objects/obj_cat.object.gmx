<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_testing</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize the cat

//horizontal speed
hspd = 0;
//Vertical speed
vspd = 0;

// moving speed
spd = 2;

//Pause Control
global.paused = false;

open = false; //Variable for skill screen
time = -1
maxHealth = 3;
curHealth = 3;
image_speed = 0
image_index = 0
healthTimer = 300
fade = 0
global.drawDead = 0
global.respawnTimer = 0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init Skills
global.skillPoints = 10;
global.skillList = ds_list_create()
ds_list_add(global.skillList,0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Manage the movement code
if(!global.paused){ //Controller for game pauses

    scr_inputs();
    
    hspd = move_x*spd;
    
    vspd = move_y*spd;
    scr_collisions();
    //if attacked by enemy and not in countdown
    if (global.enemyattack == 1 &amp;&amp; time == -1) {
        //knockback
        spd = -0.4
        //turn red
        image_index = 1
        //take damage
        curHealth -= 0.75
        //countdown
        time = 40
    }
    //countdown
    if (time != -1) time -= 1
    if (time == 20) {
        //normal speed
        spd = 2
    }
    //if countdown finish
    if (time == -1) {
        //cooldown finish
        global.enemyattack = 0
        //normal sprite
        image_index = 0
    }
    //health regen
    if (healthTimer != 0) {
        healthTimer -= 1
    }
    //add health, reset timer
    if (healthTimer == 0) {
        //check if it's higher than max health
        if !(curHealth &gt;= maxHealth) curHealth += 0.5
        healthTimer = 500
    }
    //if no health, fade out
    if (curHealth &lt;= 0) {fade = 20}
    if (fade != 0) {
        fade -= 1
        image_alpha -= 0.05
    }
    //destroy instance if completely transparent
    if (image_alpha &lt;= 0) {
        global.drawDead = 1
        instance_destroy()
    }
}
//respawn timer
if (global.respawnTimer != 0) {
    global.respawnTimer -= 1
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>112</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_wrap</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//tbh it's easier to read
draw_set_font(font_normal)
///Skillscreen
if(keyboard_check_pressed(ord('I'))){ //Open/Close the skill screen
open = !open;
} else {
    draw_text(30,30,curHealth);
}
if(open){
global.paused = true; //Pause the Game
instance_create(room_width/2-150,30,obj_skillscreen); //Create the skill screen
}
else {
 with(obj_skillscreen){
  instance_destroy(); //Destroy skillscreen if its not open
 }
}
//draw event preceeds other game events, smh
healthSkill = ds_list_find_value(global.skillList,0)
draw_text(960,32,healthSkill);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dead code
if (global.drawDead == 1) {
    draw_set_colour(c_red)
    draw_text(room_width/2,room_height/2,"You died! gg!")
    draw_text(room_width/2,(room_height/2) + 28,"Press any key to respawn")
    global.respawnTimer = 60
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Respawn code
if (global.drawDead == 1 &amp;&amp; global.respawnTimer == 0) {
    do {
        randomx = random_range(0,room_width)
        randomy = random_range(0,room_height)
    } until (!place_meeting(randomx,randomy,obj_solid))
    instance_create(randomx,randomy,obj_cat)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
